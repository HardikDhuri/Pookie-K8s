services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres-user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: pookie
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq-user
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "13133:13133"
      - "9411"
      - "4317:4317"

  app:
    build:
      context: .
      dockerfile: PookieApi.Dockerfile
    environment:
      ConnectionStrings__Default: "Host=postgres;Database=pookie;Username=postgres-user;Password=password"
      RabbitMQ__HostName: rabbitmq
      RabbitMQ__UserName: rabbitmq-user
      RabbitMQ__Password: password
      RabbitMQ__VirtualHost: /
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://otel-collector:4317"
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_started
    ports:
      - "8999:8080"
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
